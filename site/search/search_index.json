{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pr\u00e1ctica 2.1 \u2013 Instalaci\u00f3n y configuraci\u00f3n de servidor web Nginx","text":""},{"location":"#instalacion-servidor-web-nginx","title":"Instalaci\u00f3n servidor web Nginx","text":"<p>Para instalar el servidor nginx en nuestra Debian, primero actualizamos los repositorios y despu\u00e9s instalamos el paquete correspondiente:</p> <p> </p> <p>Comprobamos que nginx se ha instalado y que est\u00e1 funcionando correctamente:</p> <p></p>"},{"location":"#creacion-de-las-carpeta-del-sitio-web","title":"Creaci\u00f3n de las carpeta del sitio web","text":"<p>Todos los archivos que forman parte de un sitio web que servir\u00e1 nginx se organizar\u00e1n en carpetas. Estas carpetas, t\u00edpicamente est\u00e1n dentro de <code>/var/www</code></p> <p>As\u00ed que, vamos a crear la carpeta de nuestro sitio web o dominio:</p> <p></p> <p>Dentro de esa carpeta html, deb\u00e9is clonar el siguiente repositorio</p> <p></p> <p>Adem\u00e1s, haremos que el propietario de esta carpeta y todo lo que haya dentro sea el usuario www-data, t\u00edpicamente el usuario del servicio web.</p> <p> Para comprobar que el servidor est\u00e1 funcionando y sirviendo p\u00e1ginas correctamente, pod\u00e9is acceder desde vuestro cliente a con la direcci\u00f3n IP de la m\u00e1quina virtual  </p>"},{"location":"#configuracion-de-servidor-web-nginx","title":"Configuraci\u00f3n de servidor web NGINX","text":"<p>En <code>/etc/nginx/sites-available/a23momuga.github.io</code> insertamos el siguiente contenido  Y crearemos un archivo simb\u00f3lico entre este archivo y el de sitios que est\u00e1n habilitados, para que se d\u00e9 de alta autom\u00e1ticamente. </p>"},{"location":"#comprobaciones","title":"Comprobaciones","text":"<p>Editamos el archivo <code>/etc/hosts</code> de nuestra m\u00e1quina anfitriona para que asocie la IP de la m\u00e1quina virtual, a nuestro <code>server_name</code>. </p> <p>Usando el siguiente comando podemos ver cada solicitud a su servidor web se registra en este archivo de registro </p>"},{"location":"#configurar-servidor-sftp-en-debian","title":"Configurar servidor SFTP en Debian","text":"<p>En primer lugar, lo instalaremos desde los repositorios:  Ahora vamos a crear una carpeta en nuestro home en Debian: </p> <p>Ahora vamos a crear los certificados de seguridad necesarios para aportar la capa de cifrado a nuestra conexi\u00f3n </p> <p>Y una vez realizados estos pasos, procedemos a realizar la configuraci\u00f3n de vsftpd propiamente dicha, buscaremos las siguientes l\u00edneas del archivo y las eliminaremos por completo</p> <p></p> <p>Tras ello, a\u00f1adiremos estas l\u00edneas en su lugar </p> <p>Y, tras guardar los cambios, reiniciamos el servicio para que coja la nueva configuraci\u00f3n: </p> <p>Y ya podremos usar ftp con el servidor nginx (Puerto 21 para ftp y Puerto 22 para sftp)</p> <p></p>"},{"location":"P2.2/","title":"Pr\u00e1ctica 2.2 \u2013 Autenticaci\u00f3n en Nginx","text":""},{"location":"P2.2/#paquetes-necesarios","title":"Paquetes necesarios","text":"<p>Comprobamos  si el paquete est\u00e1 instalado </p>"},{"location":"P2.2/#creacion-de-usuarios-y-contrasenas-para-el-acceso-web","title":"Creaci\u00f3n de usuarios y contrase\u00f1as para el acceso web","text":"<p>Crearemos un archivo oculto llamado \u201c.htpasswd\u201d en el directorio de configuraci\u00f3n /etc/nginx donde guardar nuestros usuarios y contrase\u00f1as </p> <p> Comprobamos que el usuario y la contrase\u00f1a aparecen cifrados en el fichero </p>"},{"location":"P2.2/#configurando-el-servidor-nginx-para-usar-autenticacion-basica","title":"Configurando el servidor Nginx para usar autenticaci\u00f3n b\u00e1sica","text":"<p>Utilizaremos la directiva <code>auth_basic</code> dentro del location y le pondremos el nombre a nuestro dominio que ser\u00e1 mostrado al usuario al solicitar las credenciales. Por \u00faltimo, configuramos Nginx para que utilice el fichero que previamente hemos creado con la directiva <code>auth_basic_user_file</code> </p>"},{"location":"P2.2/#probando-la-nueva-configuracion","title":"Probando la nueva configuraci\u00f3n","text":"<p>Comprobamos desde la m\u00e1quina f\u00edsica que podemos acceder al sitio web y que se te solicita autenticaci\u00f3n </p> <p></p> <p>En caso de fallar el usuario/contrase\u00f1a saldr\u00e1 el siguiente error:  </p> <p>Si queremos acceder a un nuevo location debajo con la autenticaci\u00f3n b\u00e1sica para el archivo/secci\u00f3n contact.html \u00fanicamente usamos a\u00f1adimos la siguiente configuraci\u00f3n:</p> <p></p> <p>Y podemos comprobar como pide la autenticaci\u00f3n:   </p>"},{"location":"P2.2/#combinacion-de-la-autenticacion-basica-con-la-restriccion-de-acceso-por-ip","title":"Combinaci\u00f3n de la autenticaci\u00f3n b\u00e1sica con la restricci\u00f3n de acceso por IP","text":"<p>C\u00f3mo permitir o bloquear el acceso a una IP espec\u00edfica (directivas <code>allow</code> y <code>deny</code>, respectivamente). Dentro del bloque del servidor o en el archivo de configuraci\u00f3n del dominio web, que, como recordatorio, est\u00e1 ubicado en el directorio sites-available:</p> <p><code>deny all</code> indica que, por defecto, se denegar\u00e1 el acceso a todos. Por ello, es crucial colocar las reglas m\u00e1s espec\u00edficas de allow y deny justo antes de esta, ya que se evaluar\u00e1n en el orden en que est\u00e1n. Si se colocaran despu\u00e9s, se bloquear\u00eda el acceso a todos, dado que deny all ser\u00eda evaluado primero.</p> <p><code>satisfy all</code> se utiliza para permitir el uso cambiando de una ip valida (con allow o deny) y ademas ser un usuario valido. si una de las dos validaciones no es correcta el usuario no puede acceder a la web.</p> <p><code>satisfy any</code> mientras el usuario o la ip sean validas el usuario podr\u00e1 acceder a la web</p> <p>En el ejemplo se deniega el acceso a la ip 192.16.0.20  </p>"},{"location":"P2.2/#cuestiones","title":"Cuestiones","text":""},{"location":"P2.2/#cuestion-1","title":"Cuesti\u00f3n 1","text":"<p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, equivoc\u00e1ndome al poner el usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <p></p>"},{"location":"P2.2/#solucion","title":"Soluci\u00f3n","text":"<p>El usuario no podra acceder a la web. Tiene una IP permitida dentro de la configuracion, pero necesita tener tanto una IP valida como autentificarse correctamente. esto debido a la presencia de satisfy all;</p>"},{"location":"P2.2/#cuestion-2","title":"Cuesti\u00f3n 2","text":"<p>ask \"Cuesti\u00f3n 1\" Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, introduciendo correctamente usuari y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <p></p>"},{"location":"P2.2/#solucion_1","title":"Soluci\u00f3n","text":"<p>S\u00ed, se podr\u00e1 acceder a la web pues se utiliza una IP admitida y una autentificaci\u00f3n correcta.</p>"},{"location":"P2.2/#cuestion-3","title":"Cuesti\u00f3n 3","text":"<p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, introduciendo correctamente usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <p></p>"},{"location":"P2.2/#solucion_2","title":"Soluci\u00f3n","text":"<p>Podr\u00e1 acceder. dado que la presencia de satisfy any indica que teniendo una ip valida o introduciendo unas credenciales correctas podemos acceder a la web</p>"},{"location":"P2.2/#cuestion-4","title":"Cuesti\u00f3n 4","text":"<p>A lo mejor no sab\u00e9is que tengo una web para documentar todas mis excursiones espaciales con Jeff, es esta: Jeff Bezos y yo. Supongamos que quiero restringir el acceso al directorio de proyectos porque es muy secreto, eso quiere decir a\u00f1adir autenticaci\u00f3n b\u00e1sica a la URL:Proyectos. Completa la configuraci\u00f3n para conseguirlo:</p> <p></p>"},{"location":"P2.2/#solucion_3","title":"Soluci\u00f3n","text":"<pre><code>server {\n    listen 80;\n    listen [::]:80;\n    root /var/www/freewebsitetemplates.com/preview/space-science;\n    index index.html index.htm index.nginx-debian.html;\n    server_name freewebsitetemplates.com www.freewebsitetemplates.com;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n\n    location /Proyectos/ {\n        auth_basic \"Restricted Area\";\n        auth_basic_user_file /etc/nginx/.htpasswd;\n        try_files $uri $uri/ =404;\n    }\n}\n</code></pre>"},{"location":"P2.3/","title":"Pr\u00e1ctica 2.3 \u2013 Proxy inverso con Nginx","text":""},{"location":"P2.3/#nginx-servidor-web","title":"Nginx servidor web","text":"<p>Vamos a configurar dos Debian con sendos servidores Nginx. Ten\u00e9is la m\u00e1quina virtual inicial y deb\u00e9is clonarla para tener una segunda:</p> <ul> <li> <p>Uno servir\u00e1 las p\u00e1ginas web que ya hemos configurado, as\u00ed pues utilizaremos el servidor que ya tenemos configurado de la Pr\u00e1ctica 2.1.</p> </li> <li> <p>El nuevo servidor clon Debian con Nginx configurado como proxy inverso</p> </li> <li> <p>Realizaremos las peticiones HTTP desde el navegador web de nuestra m\u00e1quina f\u00edsica/anfitri\u00f3n hacia el proxy clonado, que nos redirigir\u00e1 al servidor web original</p> </li> </ul> <p>En primer lugar, deb\u00e9is cambiar el nombre que tuviera vuestra web por el de webserver, ello implica:</p> <ul> <li> <p>Cambiar el nombre del archivo de configuraci\u00f3n de sitios disponibles par Nginx</p> </li> <li> <p>Cambiar el nombre del sitio web dentro de este archivo de configuraci\u00f3n donde haga falta</p> </li> <li> <p>En el archivo de configuraci\u00f3n del sitio web, en lugar de hacer que el servidor escuche en el puerto 80, cambiadlo al 8080.</p> </li> </ul> <p></p> <ul> <li>No os olvid\u00e9is de eliminar el link simb\u00f3lico antiguo con el comando unlink nombre_del_link dentro de la carpeta sites-enabled y crear el nuevo para el nuevo nombre de archivo.</li> </ul> <p></p> <p></p>"},{"location":"P2.3/#nginx-proxy-inverso","title":"Nginx proxy inverso","text":"<p>Ahora, cuando intentamos acceder a http://ejemplo-proxy (o el nombre que tuvier\u00e1is de vuestra web de las pr\u00e1cticas anteriores), en realidad estaremos accediendo al proxy, que nos redirigir\u00e1 a http://webserver:8080, el servidor web que acabamos de configurar para que escuche con ese nombre en el puerto 8080.</p> <p>Para ello:</p> <ul> <li> <p>Crear un archivo de configuraci\u00f3n en sites-available con el nombre ejemplo-proxy (o el que tuvier\u00e1is vosotros)</p> </li> <li> <p>Este archivo de configuraci\u00f3n ser\u00e1 m\u00e1s simple, tendr\u00e1 la siguiente forma</p> </li> </ul> <p></p>"},{"location":"P2.3/#comprobaciones","title":"Comprobaciones","text":"<ul> <li>Comprobad  la petici\u00f3n y respuesta con las herramientas de desarrollador de Firefox</li> </ul>"},{"location":"P2.3/#anadiendo-cabeceras","title":"A\u00f1adiendo cabeceras","text":"<p>Para a\u00f1adir cabeceras, en el archivo de configuraci\u00f3n del sitio web debemos a\u00f1adir dentro del bloque <code>location / { \u2026 }</code> debemos a\u00f1adir la directiva:  <code>add_header Host nombre_del_host;</code></p> <p></p> <p>Comprobamos que podemos acceder al sitio web sin problemas</p> <p></p>"},{"location":"P2.4/","title":"Pr\u00e1ctica 2.4 \u2013 Balanceo de carga con proxy inverso en Nginx","text":"<p>Vamos a configurar dos servidores web Nginx con dos m\u00e1quinas Debian, adem\u00e1s de reutilizar el proxy inverso Nginx configurado en la pr\u00e1ctica anterior. Partiremos por tanto de la configuraci\u00f3n de la pr\u00e1ctica anterior, a\u00f1adiendo lo necesario:</p> <ul> <li> <p>Cada servidor web presentar\u00e1 un sitio web espec\u00edfico para esta pr\u00e1ctica</p> </li> <li> <p>El webserver2 debe tener la IP asignada de forma fija mediante la configuraci\u00f3n DHCP.</p> </li> <li> <p>El proxy inverso que ya ten\u00edamos configurado, habr\u00e1 ahora que configurarlo para que realice el balanceo de carga que deseamos</p> </li> <li> <p>Realizaremos las peticiones HTTP desde el navegador web de nuestra m\u00e1quina anfitriona.</p> </li> </ul> <p>Haremos las peticiones web desde el navegador al proxy inverso, que las repartir\u00e1 entre los dos servidores web que tenemos.</p> <p>Accederemos a http://balanceo y debemos observar que las peticiones, efectivamente, se van repartiendo entre el servidor 1 y el 2.</p>"},{"location":"P2.4/#configuraciones","title":"Configuraciones","text":""},{"location":"P2.4/#nginx-servidor-web-1","title":"Nginx Servidor Web 1","text":"<p>El primer servidor web ser\u00e1 el servidor principal que hemos venido utilizando hasta ahora durante el curso, el original, donde tenemos instalado ya el servicio Web.</p> <p>Debemos configurar este servidor web para que sirva el siguiente index.html que deb\u00e9is crear dentro de la carpeta /var/www/webserver1/html:</p> <p></p> <ul> <li> <p>El nombre del sitio web que deb\u00e9is utilizar en los archivos correspondientes (sites-available\u2026) que deb\u00e9is crear para Nginx es webserver1, as\u00ed como en sus configuraciones. Fij\u00e1os en las configuraciones que hicisteis en pr\u00e1cticas anteriores a modo de referencia.</p> </li> <li> <p>El sitio web debe escuchar en el puerto 8080.</p> </li> <li> <p>Deb\u00e9is a\u00f1adir una cabecera que se llame Serv_Web1_vuestronombre.</p> </li> </ul> <p></p>"},{"location":"P2.4/#nginx-servidor-web-2","title":"Nginx Servidor Web 2","text":"<p>Debe ser una m\u00e1quina Debian, clon del servidor web 1.</p> <p>En este servidor web debemos realizar una configuraci\u00f3n id\u00e9ntica al servidor web 1 pero cambiando webserver1 por webserver2 (tambi\u00e9n en el index.html), as\u00ed como el nombre de la cabecera a\u00f1adida, que ser\u00e1 Serv_Web2_vuestronombre</p> <p> </p>"},{"location":"P2.4/#nginx-proxy-inverso","title":"Nginx Proxy Inverso","text":"<p>Ya disponemos de los dos servidores web entre los que se van a repartir las peticiones que realice el cliente desde el navegador.</p> <p>Vamos, por tanto, a configurar el proxy inverso para que realice este reparto de peticiones:</p> <p>En sites-available deb\u00e9is crear el archivo de configuraci\u00f3n con el nombre balanceo Este archivo tendr\u00e1 el siguiente formato:</p> <p></p> <p>Donde: El bloque upstream \u2192 son los servidores entre los que se va a repartir la carga, que son los dos que hemos configurado anteriormente.</p> <p>Si mir\u00e1is el diagrama y ten\u00e9is en cuenta la configuraci\u00f3n que hab\u00e9is hecho hasta ahora, aqu\u00ed deber\u00e9is colocar la IP de cada servidor, as\u00ed como el puerto donde est\u00e1 escuchando las peticiones web.</p> <p>A este grupo de servidores le ponemos un nombre, que es backend_hosts</p> <p>#### Comprobaciones  </p>"}]}